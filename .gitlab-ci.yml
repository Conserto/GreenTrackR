stages:
  - build
  - test

cache:
  paths:
    - node_modules/

before_script:
  - apk add --no-cache yarn
  - yarn install --frozen-lockfile

build:
  stage: build
  script:
    - yarn build

test:
  stage: test
  script:
    - yarn test

# Analysis of source code
sonarqube:
  stage: test
  interruptible: true
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  before_script: [""]
  variables:
    GIT_DEPTH: 0
    SONAR_PROJECT_KEY: greentrackr-opensource
    SONAR_PROJECT_NAME: greentrackr-opensource
    SONAR_EXLUSIONS: "**/extension/**"
  script:
    - export P_VERSION=$(cat package.json | grep -m 1 "\"version\":" | cut -d':' -f2- | cut -d'"' -f2)
    - echo "Version => ${P_VERSION}"
    - |
      sonar-scanner \
        -Dsonar.lang.patterns.web="**/*.html"
        -Dsonar.lang.patterns.htl="**/*.html"
        -Dsonar.sources="./" \
        -Dsonar.exclusions="$SONAR_EXCLUSIONS" \
        -Dsonar.qualitygate.wait=true \
        -Dsonar.host.url="$SONAR_HOST" \
        -Dsonar.projectKey="${SONAR_PROJECT_KEY}" \
        -Dsonar.projectName="${SONAR_PROJECT_NAME}" \
        -Dsonar.projectVersion="${P_VERSION}" \
        -Dsonar.sourceEncoding="UTF-8" \
        -Dsonar.projectBaseDir="$(pwd)" \
        -Dsonar.token="$SONAR_TOKEN" \
  allow_failure: true
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'
      when: on_success
    - when: never

